version: 2
jobs:
  test-job:
    docker:
      - image: circleci/node:7.10-browsers
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/tmp
      - run:
          name:  Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn --offline

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      - run:
          name: Upload coverage results to Code Climate
          command: |
            ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.frontend.json
  lint-job:
    docker:
      - image: circleci/node:7.10-browsers
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/tmp
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn --offline

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}

      - run: yarn lint

  deploy-job:
    docker:
      - image: circleci/node:7.10-browsers
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo/tmp
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn --offline

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      - run:
          name: Build app in production mode
          command: |
            yarn build
      - run:
          name: Deploy app to firebase
          command: |
            yarn deploy --token=$FIREBASE_TOKEN

workflows:
  version: 2
  build-deploy:
    jobs:
      - test-job
      - lint-job
      - deploy-job:
          requires:
            - test-job
          filters:
            branches:
              only: master
